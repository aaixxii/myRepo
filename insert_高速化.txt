1. SYSTEM_CONFIG テーブルに、PARALLE_SEGMENTS_COUNT、PARALLE_SEGMENTS_ALGORITHM(今後拡張用、当面はround robin方式)との項目を追加、

2. MM DBにPARALLE_SEGMENTS_INFOテーブルを追加

    CREATE TABLE PARALLE_SEGMENTS_INFO (
      ID                    INT(8)  NOT NULL,
      SEGMENT_ID             BIGINT(38),
      LAST_USING_SEGMENT_ID     BIGINT(38),
      PRIMARY KEY(ID)
    ) ENGINE=INNODB;

3. add_biometrics プロシージャにIN パラメータに、init_semgnet(boolean)とupdate_segment_id(bigint)を追加。


4. javaでSyncInsert最初に、まず以下のようにどのSegmentを使うを確認(decide_segment プロシージャ新規)：
　4.1 SYSTEM_CONFIG テーブルから、PARALLE_SEGMENTS_COUNTを取得
　4.2 PARALLE_SEGMENTS_INFOテーブルから、COUNT(SEGMENT_ID)を取得
　4.2.1 COUNT(SEGMENT_ID)< PARALLE_SEGMENTS_COUNTの場合、
　　　　　 init_semgnet=true, update_segment_id=-1で、add_biometricsをCall（他のパラメータはいまのとおり）
　4.2.2　COUNT(SEGMENT_ID)>= PARALLE_SEGMENTS_COUNTの場合、
　　　　　  PARALLE_SEGMENTS_INFOテーブル情報より、どうのSegmentIDを使うを決める：　　　　　 　
　　　　　　　round robin方法で、使うSEGMENT_IDを決める、
　　　　　　　PARALLE_SEGMENTS_INFOテーブルうより、LAST_USING_SEGMENT_IDを更新
　　　　　　　init_semgnet=false, update_segment_id=上記できめたSEGMENT_IDで、add_biometricsをCall（他はいまのとおり）

5．add_biometrics プロシージャ内容の修正：   
5.1 MAX(SEGMENT_ID)を更新ではなく、IN　パラメータに伝われたupdate_segment_idを更新する。
5.2　SEGMENTS更新場合、
　　　　UPDATE SEGMENTS条件に、init_semgnetを追加：
　　　　　IF init_semgnet==false AND (seg_record_count  < tmp_max_seg_record_count) 
5.3　Segment更新後、max_seg_record_countに達しているかを確認
　　　　　max_seg_record_countに到達した場合、PARALLE_SEGMENTS_INFOテーブルから、該当SegmentIDを削除　　　　　　
5.4　NewSegmentの場合、
　　　PARALLE_SEGMENTS_INFOテーブルに、該当SegmentIDを追加




　
    
  




　　　　　　　
　　　

　　
　　　　
　　　

    
